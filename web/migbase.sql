--
-- PostgreSQL database dump
--

-- Dumped from database version 16.3
-- Dumped by pg_dump version 16.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: blog
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO blog;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: blog
--

COMMENT ON SCHEMA public IS '';


--
-- Name: role; Type: TYPE; Schema: public; Owner: blog
--

CREATE TYPE public.role AS ENUM (
    'admin',
    'user'
);


ALTER TYPE public.role OWNER TO blog;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: _sqlx_migrations; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public._sqlx_migrations (
    version bigint NOT NULL,
    description text NOT NULL,
    installed_on timestamp with time zone DEFAULT now() NOT NULL,
    success boolean NOT NULL,
    checksum bytea NOT NULL,
    execution_time bigint NOT NULL
);


ALTER TABLE public._sqlx_migrations OWNER TO blog;

--
-- Name: articles; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.articles (
    id integer NOT NULL,
    author_id character varying(20) NOT NULL
);


ALTER TABLE public.articles OWNER TO blog;

--
-- Name: comments; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.comments (
    id integer NOT NULL,
    content character varying(1024) NOT NULL,
    author_id character varying(20) NOT NULL,
    article_id integer NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.comments OWNER TO blog;

--
-- Name: likes; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.likes (
    article_id integer NOT NULL,
    user_id character varying(20) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.likes OWNER TO blog;

--
-- Name: views; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.views (
    id integer NOT NULL,
    article_id integer NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.views OWNER TO blog;

--
-- Name: article_stats; Type: VIEW; Schema: public; Owner: blog
--

CREATE VIEW public.article_stats AS
 SELECT id,
    ( SELECT count(*) AS count
           FROM public.comments c
          WHERE (c.article_id = a.id)) AS comments_count,
    ( SELECT count(*) AS count
           FROM public.views v
          WHERE (v.article_id = a.id)) AS views_count,
    ( SELECT count(*) AS count
           FROM public.likes l
          WHERE (l.article_id = a.id)) AS likes_count
   FROM public.articles a;


ALTER VIEW public.article_stats OWNER TO blog;

--
-- Name: articles_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.articles ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.articles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: comments_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.comments ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: drafts; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.drafts (
    id integer NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    content text DEFAULT ''::text NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    article_id integer NOT NULL
);


ALTER TABLE public.drafts OWNER TO blog;

--
-- Name: drafts_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.drafts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.drafts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: editions; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.editions (
    id integer NOT NULL,
    article_id integer NOT NULL,
    notes character varying(255) NOT NULL,
    published_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    title character varying(255) NOT NULL,
    content text NOT NULL
);


ALTER TABLE public.editions OWNER TO blog;

--
-- Name: editions_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.editions ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.editions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: files; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.files (
    id integer NOT NULL,
    edition_id integer,
    draft_id integer,
    name character varying(255) NOT NULL,
    mime_type character varying(255) NOT NULL,
    uploaded_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.files OWNER TO blog;

--
-- Name: files_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.files ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: last_editions; Type: VIEW; Schema: public; Owner: blog
--

CREATE VIEW public.last_editions AS
 SELECT id,
    article_id,
    notes,
    published_at,
    title,
    content,
    ( SELECT min(editions.published_at) AS min
           FROM public.editions
          WHERE (editions.article_id = e.article_id)) AS first_published_at,
    published_at AS last_published_at
   FROM public.editions e
  WHERE (published_at = ( SELECT max(editions.published_at) AS max
           FROM public.editions
          WHERE (editions.article_id = e.article_id)));


ALTER VIEW public.last_editions OWNER TO blog;

--
-- Name: users; Type: TABLE; Schema: public; Owner: blog
--

CREATE TABLE public.users (
    id character varying(20) NOT NULL,
    name character varying(20) NOT NULL,
    naver_id character varying(255) NOT NULL,
    role public.role DEFAULT 'user'::public.role NOT NULL
);


ALTER TABLE public.users OWNER TO blog;

--
-- Name: views_id_seq; Type: SEQUENCE; Schema: public; Owner: blog
--

ALTER TABLE public.views ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.views_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: _sqlx_migrations _sqlx_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public._sqlx_migrations
    ADD CONSTRAINT _sqlx_migrations_pkey PRIMARY KEY (version);


--
-- Name: articles articles_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.articles
    ADD CONSTRAINT articles_pkey PRIMARY KEY (id);


--
-- Name: comments comments_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT comments_pkey PRIMARY KEY (id);


--
-- Name: drafts drafts_article_id_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.drafts
    ADD CONSTRAINT drafts_article_id_key UNIQUE (article_id);


--
-- Name: drafts drafts_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.drafts
    ADD CONSTRAINT drafts_pkey PRIMARY KEY (id);


--
-- Name: editions editions_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.editions
    ADD CONSTRAINT editions_pkey PRIMARY KEY (id);


--
-- Name: files files_draft_id_name_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_draft_id_name_key UNIQUE (draft_id, name);


--
-- Name: files files_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_pkey PRIMARY KEY (id);


--
-- Name: likes likes_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.likes
    ADD CONSTRAINT likes_pkey PRIMARY KEY (article_id, user_id);


--
-- Name: users users_name_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_name_key UNIQUE (name);


--
-- Name: users users_naver_id_key; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_naver_id_key UNIQUE (naver_id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: views views_pkey; Type: CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.views
    ADD CONSTRAINT views_pkey PRIMARY KEY (id);


--
-- Name: articles articles_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.articles
    ADD CONSTRAINT articles_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id) ON UPDATE CASCADE;


--
-- Name: comments comments_article_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT comments_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.articles(id) ON DELETE CASCADE;


--
-- Name: comments comments_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT comments_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.users(id) ON UPDATE CASCADE;


--
-- Name: drafts drafts_article_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.drafts
    ADD CONSTRAINT drafts_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.articles(id);


--
-- Name: editions editions_article_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.editions
    ADD CONSTRAINT editions_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.articles(id) ON DELETE CASCADE;


--
-- Name: files files_draft_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_draft_id_fkey FOREIGN KEY (draft_id) REFERENCES public.drafts(id) ON DELETE CASCADE;


--
-- Name: files files_edition_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_edition_id_fkey FOREIGN KEY (edition_id) REFERENCES public.articles(id) ON DELETE CASCADE;


--
-- Name: likes likes_article_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.likes
    ADD CONSTRAINT likes_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.articles(id) ON DELETE CASCADE;


--
-- Name: likes likes_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.likes
    ADD CONSTRAINT likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON UPDATE CASCADE;


--
-- Name: views views_article_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: blog
--

ALTER TABLE ONLY public.views
    ADD CONSTRAINT views_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.articles(id) ON DELETE CASCADE;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: blog
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;


--
-- PostgreSQL database dump complete
--

